import timeit
import random

arr = [random.randint(1, 1000) for _ in range(1000)]

def bubble_sort(arr: list, ascending: bool) -> list:
    arr = arr[:]
    for i in range(len(arr) - 1):
        for j in range(len(arr) - 1 - i):
            if (arr[j] > arr[j + 1] and ascending) or (arr[j] < arr[j + 1] and not ascending):
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

def insertion_sort(arr: list, ascending: bool) -> list:
    arr = arr[:]  
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and ((arr[j] > key and ascending) or (arr[j] < key and not ascending)):
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr

def quick_sort(arr: list, ascending: bool) -> list:
    arr = arr[:] 
    if len(arr) <= 1:
        return arr
    else:
        pivot = arr.pop()

    items_lower = []
    items_higher = []

    for i in arr:
        if (i > pivot and ascending) or (i < pivot and not ascending):
            items_higher.append(i)
        else:
            items_lower.append(i)

    return quick_sort(items_lower, ascending) + [pivot] + quick_sort(items_higher, ascending)


ascending_bubble = False
ascending_insertion = False
ascending_quick = False

bubble_time = timeit.timeit(lambda: bubble_sort(arr, ascending_bubble), number=10)
insertion_time = timeit.timeit(lambda: insertion_sort(arr, ascending_insertion), number=10)
quick_time = timeit.timeit(lambda: quick_sort(arr, ascending_quick), number=10)

sorted_bubble = bubble_sort(arr, ascending_bubble)
sorted_insertion = insertion_sort(arr, ascending_insertion)
sorted_quick = quick_sort(arr, ascending_quick)

print(f"This is bubble sort {'ascending' if ascending_bubble else 'descending'}: \n{sorted_bubble[:20]} ...")
print(f"This is insertion sort {'ascending' if ascending_insertion else 'descending'}: \n{sorted_insertion[:20]} ...")
print(f"This is quick sort {'ascending' if ascending_quick else 'descending'}: \n{sorted_quick[:20]} ...")
print()
print(f"bubble time = {bubble_time:.6f} seconds")
print(f"insertion time = {insertion_time:.6f} seconds")
print(f"quick time = {quick_time:.6f} seconds")
